#========================================================================
#
#                   S P E C F E M 2 D  Version 7 . 0
#                   --------------------------------
#
#     Main historical authors: Dimitri Komatitsch and Jeroen Tromp
#                        Princeton University, USA
#                and CNRS / University of Marseille, France
#                 (there are currently many more authors!)
# (c) Princeton University and CNRS / University of Marseille, April 2014
#
# This software is a computer program whose purpose is to solve
# the two-dimensional viscoelastic anisotropic or poroelastic wave equation
# using a spectral-element method (SEM).
#
# This software is governed by the CeCILL license under French law and
# abiding by the rules of distribution of free software. You can use,
# modify and/or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and Inria at the following URL
# "http://www.cecill.info".
#
# As a counterpart to the access to the source code and rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty and the software's author, the holder of the
# economic rights, and the successive licensors have only limited
# liability.
#
# In this respect, the user's attention is drawn to the risks associated
# with loading, using, modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean that it is complicated to manipulate, and that also
# therefore means that it is reserved for developers and experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or
# data to be ensured and, more generally, to use and operate it in the
# same conditions as regards security.
#
# The full text of the license is available in file "LICENSE".
#
#========================================================================

# @configure_input@

FC = @FC@
FCFLAGS = #@FCFLAGS@

MPIFC = @MPIFC@
MPILIBS = @MPILIBS@

DEF_FFLAGS = @DEF_FFLAGS@ -I../../setup

CC = @CC@
CPPFLAGS = @CPPFLAGS@ $(COND_MPI_CPPFLAGS)
CFLAGS = @CFLAGS@ $(CPPFLAGS) -I../../setup

## serial or parallel
@COND_MPI_TRUE@F90 = $(MPIFC) $(FCFLAGS) @FC_DEFINE@USE_MPI $(MPILIBS)
@COND_MPI_FALSE@F90 = $(FC) $(FCFLAGS)

LIB = 

LINK = $(F90)

## compilation directories
# E : executables directory
E = ../../bin
# O : objects directory
O = ../../obj
# SHARED : shared directoy
SHARED = ../shared
# S : source file directory
S = .
## setup file directory
SETUP = ../../setup


.PHONY: help clean default all \
	check_quality_external_mesh xcheck_quality_external_mesh \
	xadj_seismogram convolve_source_timefunction xconvolve_source_timefunction

####
#### targets
####

DEFAULT = \
	xadj_seismogram \
	xcheck_quality_external_mesh \
	xconvolve_source_timefunction \
	$(EMPTY_MACRO)

default: $(DEFAULT)

all: default

check_quality_external_mesh: xcheck_quality_external_mesh
convolve_source_timefunction: xconvolve_source_timefunction


clean:
	-rm -rf $O/*.o \
	$O/*.il *.mod \
	$E/xcheck_quality_external_mesh \
	$E/xconvolve_source_timefunction \
	*.oo *.ipo


help:
	@echo "usage: make [executable]"
	@echo ""
	@echo "supported executables:"
	@echo "    xcheck_quality_external_mesh"
	@echo "    xconvolve_source_timefunction"
	@echo "    xadj_seismogram"
	@echo ""

##
## check_quality_external_mesh
##
xcheck_quality_external_mesh: $E/xcheck_quality_external_mesh
$E/xcheck_quality_external_mesh: $O/check_quality_external_mesh.o $O/read_value_parameters.o $O/param_reader.o $O/define_shape_functions.o
	${F90} $(DEF_FFLAGS) -o ${E}/xcheck_quality_external_mesh $O/check_quality_external_mesh.o $O/read_value_parameters.o $O/param_reader.o $O/define_shape_functions.o

##
## convolve_source_timefunction
##
xconvolve_source_timefunction: $E/xconvolve_source_timefunction
$E/xconvolve_source_timefunction: $O/convolve_source_timefunction.o
	${F90} $(DEF_FFLAGS) -o ${E}/xconvolve_source_timefunction $O/convolve_source_timefunction.o

##
## adj_seismogram
##
xadj_seismogram: $E/xadj_seismogram
$E/xadj_seismogram: $O/adj_seismogram.o
	${F90} $(DEF_FFLAGS) -o ${E}/xadj_seismogram $O/adj_seismogram.o


##
## object files
##

$O/adj_seismogram.o: $S/adj_seismogram.f90
	${F90} $(DEF_FFLAGS) -c -o $O/adj_seismogram.o $S/adj_seismogram.f90

$O/check_quality_external_mesh.o: $S/check_quality_external_mesh.f90
	${F90} $(DEF_FFLAGS) -c -o $O/check_quality_external_mesh.o $S/check_quality_external_mesh.f90

$O/convolve_source_timefunction.o: $S/convolve_source_timefunction.f90
	${F90} $(DEF_FFLAGS) -c -o $O/convolve_source_timefunction.o $S/convolve_source_timefunction.f90

##
## shared
##

$O/define_shape_functions.o: ${SHARED}/define_shape_functions.f90 ${SETUP}/constants.h
	${F90} $(DEF_FFLAGS) -c -o $O/define_shape_functions.o ${SHARED}/define_shape_functions.f90

$O/read_value_parameters.o: ${SHARED}/read_value_parameters.f90
	${F90} $(DEF_FFLAGS) -c -o $O/read_value_parameters.o ${SHARED}/read_value_parameters.f90

$O/param_reader.o: ${SHARED}/param_reader.c
	${CC} -c $(CFLAGS) -o $O/param_reader.o ${SHARED}/param_reader.c

